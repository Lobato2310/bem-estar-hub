workflows:
  ios-build:
    name: Build iOS (App Store)
    max_build_duration: 120
    environment:
      node: 20
      cocoapods: default
      xcode: latest
      vars:
        APP_BUNDLE_ID: com.lobato.myfitlife
        APP_NAME: MyFitLife
        DEVELOPMENT_TEAM: N7379U738N

    integrations:
      app_store_connect: MyFitLife

    cache:
      cache_paths:
        - ~/.npm
        - ~/Library/Caches/CocoaPods
        - ios/Pods

    scripts:
      - name: Install dependencies
        script: |
          npm ci --legacy-peer-deps

      - name: Build web (production)
        script: |
          export NODE_ENV=production
          npm run build

      - name: Sync Capacitor iOS
        script: |
          npx cap copy ios
          npx cap sync ios
          if [ -f ios/App/Podfile ]; then
            sed -i '' "s/platform :ios, '.*'/platform :ios, '13.0'/" ios/App/Podfile || true
          fi

      - name: CocoaPods
        script: |
          cd ios/App
          pod install --repo-update

      - name: Set up code signing
        script: |
          set -x
          echo "=== Inicializando keychain ==="
          keychain initialize
          
          echo "=== Buscando certificados do App Store Connect ==="
          app-store-connect fetch-signing-files "$APP_BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create
          
          echo "=== Adicionando certificados ao keychain ==="
          keychain add-certificates
          
          echo "=== Aplicando profiles ao projeto ==="
          cd ios/App
          xcode-project use-profiles
          
          echo "=== Listando provisioning profiles instalados ==="
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          
          echo "=== Verificando configuração do projeto ==="
          cat App.xcodeproj/project.pbxproj | grep -A 5 "PROVISIONING_PROFILE"

      - name: Archive with xcodebuild
        script: |
          cd ios/App
          
          # Obter o UUID do provisioning profile
          PROFILE_PATH=$(find ~/Library/MobileDevice/Provisioning\ Profiles -name "*.mobileprovision" | head -1)
          if [ -n "$PROFILE_PATH" ]; then
            PROFILE_UUID=$(grep -aA1 'UUID' "$PROFILE_PATH" | grep -o '[A-Z0-9-]\{36\}' | head -1)
            echo "Profile UUID encontrado: $PROFILE_UUID"
          fi
          
          xcodebuild \
          -workspace "App.xcworkspace" \
          -scheme "App" \
          -configuration "Release" \
          -destination "generic/platform=iOS" \
          -archivePath "$CM_BUILD_DIR/App.xcarchive" \
          CODE_SIGN_STYLE="Manual" \
          DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
          PRODUCT_BUNDLE_IDENTIFIER="$APP_BUNDLE_ID" \
          ${PROFILE_UUID:+PROVISIONING_PROFILE_SPECIFIER="$PROFILE_UUID"} \
          clean archive

      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/ios/App/exportOptions.plist" \
            -exportPath "$CM_BUILD_DIR" \
            -allowProvisioningUpdates

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true