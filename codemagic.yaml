workflows:
  ios-build:
    name: Build iOS (App Store)
    max_build_duration: 120
    environment:
      node: 20
      cocoapods: default
      xcode: latest
      vars:
        APP_BUNDLE_ID: com.lobato.myfitlife
        APP_NAME: MyFitLife
        DEVELOPMENT_TEAM: N7379U738N

    integrations:
      app_store_connect: MyFitLife

    cache:
      cache_paths:
        - ~/.npm
        - ~/Library/Caches/CocoaPods
        - ios/Pods

    scripts:
      - name: Install dependencies
        script: |
          npm ci --legacy-peer-deps

      - name: Build web (production)
        script: |
          export NODE_ENV=production
          npm run build

      - name: Sync Capacitor iOS
        script: |
          npx cap copy ios
          npx cap sync ios
          if [ -f ios/App/Podfile ]; then
            sed -i '' "s/platform :ios, '.*'/platform :ios, '13.0'/" ios/App/Podfile || true
          fi

      - name: CocoaPods
        script: |
          cd ios/App
          pod install --repo-update

      - name: Set up code signing
        script: |
          set -x
          echo "=== Inicializando keychain ==="
          keychain initialize
          
          echo "=== Criando diretórios necessários ==="
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/MobileDevice/Certificates
          
          echo "=== Copiando certificado ==="
          cp "$CM_BUILD_DIR/myfitlife.p12" ~/Library/MobileDevice/Certificates/
          ls -la ~/Library/MobileDevice/Certificates/
          
          echo "=== Copiando provisioning profile ==="
          cp "$CM_BUILD_DIR/MyFitLife_App_Store.mobileprovision" ~/Library/MobileDevice/Provisioning\ Profiles/
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          
          echo "=== Adicionando certificados ao keychain ==="
          keychain add-certificates
          
          echo "=== Verificando certificados instalados ==="
          security find-identity -v -p codesigning
          
          echo "=== Aplicando profiles ao projeto ==="
          cd ios/App
          xcode-project use-profiles
          
          echo "=== Verificando configuração final ==="
          cat App.xcodeproj/project.pbxproj | grep -A 3 "PROVISIONING_PROFILE_SPECIFIER"


      - name: Remove storyboard references completely
        script: |
          cd ios/App
          
          echo "=== Criando backup do projeto ==="
          cp App.xcodeproj/project.pbxproj App.xcodeproj/project.pbxproj.backup
          
          echo "=== Removendo TODAS as referências aos storyboards ==="
          # Usar perl para remoção mais precisa
          perl -i -ne 'print unless /storyboard/i' App.xcodeproj/project.pbxproj
          
          # Remover do Info.plist
          if [ -f App/Info.plist ]; then
            plutil -remove UIMainStoryboardFile App/Info.plist 2>/dev/null || true
            plutil -remove UILaunchStoryboardName App/Info.plist 2>/dev/null || true
            echo "Info.plist atualizado"
          fi
          
          # Verificar se as pastas Base.lproj existem e remover
          rm -rf App/Base.lproj
          
          echo "=== Verificando se ainda existem referências ==="
          grep -i "storyboard" App.xcodeproj/project.pbxproj || echo "Nenhuma referência encontrada - sucesso!"

      - name: Archive with xcodebuild
        script: |
          cd ios/App
          xcodebuild \
          -workspace "App.xcworkspace" \
          -scheme "App" \
          -configuration "Release" \
          -destination "generic/platform=iOS" \
          -archivePath "$CM_BUILD_DIR/App.xcarchive" \
          CODE_SIGN_STYLE="Manual" \
          -verbose \
          clean archive 2>&1 | tee build.log
          
          # Se falhar, mostrar os últimos 100 erros
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "=== ERROS DETALHADOS ==="
            grep -i "error:" build.log | tail -20
            exit 1
          fi

      - name: Remove storyboard references
        script: |
          cd ios/App
          
          echo "=== Removendo referências aos storyboards do projeto ==="
          
          # Remover referências do project.pbxproj
          sed -i '' '/Main.storyboard/d' App.xcodeproj/project.pbxproj
          sed -i '' '/LaunchScreen.storyboard/d' App.xcodeproj/project.pbxproj
          
          # Verificar Info.plist e remover referências se existirem
          if [ -f App/Info.plist ]; then
            /usr/libexec/PlistBuddy -c "Delete :UIMainStoryboardFile" App/Info.plist 2>/dev/null || true
            /usr/libexec/PlistBuddy -c "Delete :UILaunchStoryboardName" App/Info.plist 2>/dev/null || true
          fi
          
          echo "=== Storyboards removidos com sucesso ==="


      - name: Archive with xcodebuild
        script: |
          cd ios/App
          xcodebuild \
          -workspace "App.xcworkspace" \
          -scheme "App" \
          -configuration "Release" \
          -destination "generic/platform=iOS" \
          -archivePath "$CM_BUILD_DIR/App.xcarchive" \
          CODE_SIGN_STYLE="Manual" \
          clean archive

      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/ios/App/exportOptions.plist" \
            -exportPath "$CM_BUILD_DIR" \
            -allowProvisioningUpdates

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true